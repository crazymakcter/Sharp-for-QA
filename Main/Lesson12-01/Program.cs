using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Lesson12_01
{
    class Program
    {
        /// <summary>
        /// 1.1. СОЗДАТЬ КЛАСС Worker, ИМЕЮЩИЙ ПОЛЯ string Name И int Level
        /// 1.2. ДОБАВИТЬ В КЛАСС МЕТОД Action() БЕЗ ВОЗВРАЩАЕМОГО ЗНАЧЕНИЯ И РЕАЛИЗАЦИИ
        /// 1.3. ДОБАВИТЬ В КЛАСС ОПЕРАТОР ++ ДЛЯ УВЕЛИЧЕНИЯ УРОВНЯ НА
        /// 1.4. СОЗДАТЬ КЛАСС QA - НАСЛЕДНИК КЛАССА Worker
        /// 1.5. ДОБАВИТЬ В QA ОТКРЫТОЕ АВТОСВОЙСТВО Automation ТИПА bool
        /// 1.6. В КЛАССЕ QA РЕАЛИЗОВАТЬ МЕТОД Action() ЗАВИСЯЩИЙ ОТ Automation:
        ///     - если Automation = true вывод строки “Automation and Manual Testing”
        ///     - если Automation = false вывод строки “Manual Testing”
        /// 1.7. ПРОДЕМОНСТРИРОВАТЬ ФУНКЦИОНАЛЬНОСТЬ СОЗДАННЫХ КЛАССОВ
        /// 2.1. СОЗДАТЬ КЛАСС Developer - НАСЛЕДНИК КЛАССА Worker
        /// 2.2. ДОБАВИТЬ В Developer ОТКРЫЕ АВТОСВОЙСТВА ТИПА bool: Unity, JS
        /// 2.3. В КЛАССЕ Developer РЕАЛИЗОВАТЬ МЕТОД Action() ЗАВИСЯЩИЙ ОТ Unity И JS:
        ///     - вывод строки“Programming and Bug fixing on Unity & JS” - если оба свойства true
        ///     - вывод строки“Programming and Bug fixing on Unity” - если оба true только Unity
        /// 2.4. СОЗДАТЬ ИНТЕРФЕЙС IWorker, ИМЕЮЩИЙ МЕТОД void DoWork()
        /// 2.5. РЕАЛИЗОВАТЬ IWorker В КЛАССАХ QA И Developer
        /// 2.6. ПРИ РЕАЛИЗАЦИИ МЕТОДА DoWork() НА КОНСОЛЬ ВЫВОДИТСЯ СТРОКА С ИМЕНЕМ,
        ///      УРОВНЕМ И СОДЕРЖАНИЕМ МЕТОДА Action() СООТВЕТСТВУЮЩИХ КЛАССОВ
        /// 2.7. ПРОДЕМОНСТРИРОВАТЬ ФУНКЦИОНАЛЬНОСТЬ ИНТЕРФЕЙСА И КЛАССОВ
        /// 3.1. СОЗДАТЬ КЛАСС ОБОБЩЕННЫЙ КЛАСС Team, ИМЕЮЩИЙ ОДИН ОБОБЩЕННЫЙ ТИП
        /// 3.2. НАЛОЖИТЬ ОГРАНИЧЕНИЯ НА ОБОБЩЕННЫЙ ТИП ТАК, ЧТОБЫ ОН НАСЛЕДОВАЛСЯ ОТ
        ///      КЛАССА Worker И РЕАЛИЗОВЫВАЛ ИНТЕРФЕЙС IWorker
        /// 3.3. ДОБАВИТЬ В Team СКРЫТЫЙ МАССИВ ИЗ 10 ЭЛЕМЕНТОВ ОБОБЩЕННОГО ТИПА
        /// 3.4. ДОБАВИТЬ В Team Get-СВОЙСТВО Size, ДОСТУПНОЕ ТОЛЬКО ДЛЯ ЧТЕНИЯ,
        ///      ВОЗВРАЩАЮЩЕЕ КОЛИЧЕСТВО СУЩЕСТВУЮЩИХ ЭЛЕМЕНТОВ МАССИВА
        /// 3.5. ДОБАВИТЬ В Team МЕТОД TeamWork(), ПРОХОДЯЩИЙ ПО ЭЛЕМЕНТАМ МАССИВА И
        ///      ВЫЗЫВАЮЩИЙ У НИХ МЕТОД DoWork()
        /// 3.6. ДОБАВИТЬ В Team МЕТОД Add(T obj), ДОБАВЛЯЮЩИЙ НОВЫЙ ЭЛЕМЕНТ ВО
        ///      ВНУТРЕННИЙ МАССИВ, ЕСЛИ ЭТО ПОЗВОЛЯЕТ КОЛИЧЕСТВО ЭЛЕМЕНТОВ
        /// 3.7. ДОБАВИТЬ В Team МЕТОД RemoveByName(string name), УДАЛЯЮЩИЙ
        ///      ЭЛЕМЕНТ ИЗ ВНУТРЕННОГО МАССИВА ПО СООТВЕТСТВИЮ ИМЕН
        /// 3.8. ПРОДЕМОНСТРИРОВАТЬ ФУНКЦИОНАЛЬНОСТЬ КЛАССА Team
        /// 4.1. СОЗДАТЬ КЛАСС Department, РЕАЛИЗУЮЩИЙ ИНТЕРФЕЙС IWorker
        /// 4.2. ДОБАВИТЬ В КЛАСС ОТКРЫТОЕ АВТОСВОЙСТВО: СЛОВАРЬ С КЛЮЧОМ ТИПА string И
        ///      ЗНАЧЕНИЕМ ТИПА Team
        /// 4.3. РЕАЛИЗОВАТЬ МЕТОД DoWork() ТАК, ЧТОБЫ ПРИ ЕГО ВЫПОЛНЕНИИ У ВСЕХ КОМАНД
        ///      В СЛОВАРЕ ПРОИСХОДИЛ ВЫЗОВ МЕТОДА TeamWork()
        /// 4.4. ДОБАВИТЬ МЕТОД AddToTeam(), ПОЗВОЛЯЮЩИЙ ДОБАВЛЯТЬ ПО КЛЮЧУ В
        ///      КАМАНДУ ИЗ СЛОВАРЯ КЛАССА НОВОГО СОТРУДНИКА
        /// 4.5. ДОБАВИТЬ МЕТОД RemoveByName(), ПОЗВОЛЯЮЩИЙ УДАЛИТЬ СОТРУДНИКА ПО
        ///      ИМЕНИ ИЗ КОМАНДЫ, СОДЕРЖАЩЕЙСЯ В СЛОВАРЕ КЛАССА
        /// 4.6. ПРОДЕМОНСТРИРОВАТЬ ФУНКЦИОНАЛЬНОСТЬ КЛАССА Department
        /// 5.1. PЕАЛИЗОВАТЬ ИНТЕРФЕЙС IEnumerable В КЛАССЕ Department ТАК, ЧТОБЫ ПРИ
        ///      ИСПОЛЬЗОВАНИИ ОБЪЕКТА ДАННОГО КЛАССА В ЦИКЛЕ foreach ПРОИСХОДИЛ
        ///      ЦИКЛИЧСКИЙ ОБХОД ПО КОМАНДАМ
        /// 5.2. РЕАЛИЗОВАТЬ РАСШИРЯЮЩИЙ МЕТОД FindByName ДЛЯ ОБЪЕКТОВ КЛАССА
        ///      Department, КОТОРЫЙ ОСУЩЕСТВЛЯЕТ ПОИСК СОТРУДНИКА В ОТДЕЛЕ ПО ИМЕНИ И
        ///      ВОЗВРАЩАЕТ НАЗВАНИЕ КОМАНДЫ, В КОТОРОЙ НАХОДИТСЯ ДАННЫЙ СОТРУДНИК
        /// 5.3. ПРОДЕМОНСТРИРОВАТЬ ФУНКЦИОНАЛЬНОСТЬ С ИСПОЛЬЗОВАНИЕМ ЦИКЛА foreach
        /// </summary>
        static void Main(string[] args)
        {
            QA manualQa = new QA();
            manualQa.Name = "Ivan";
            manualQa.Level = 5;
            manualQa.Automation = true;
            manualQa.DoWork();
            Developer dev = new Developer();
            dev.Name = "Serg";
            dev.Level = 25;
            dev.JS = true;
            dev.Unity = false;
            dev.DoWork();
            Console.ReadKey();
        }
    }
}
